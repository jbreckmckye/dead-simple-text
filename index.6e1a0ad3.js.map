{"mappings":"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","sources":["<anon>","src/script/index.ts","src/script/state.ts","node_modules/trkl/trkl-min.js","src/script/util.ts","src/script/storage.ts","src/script/View.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $f7662eea5fe8ba4c$exports = {};\nvar $f7662eea5fe8ba4c$var$r = [];\nfunction $f7662eea5fe8ba4c$var$t(t) {\n    var o, n, u = [], c = function(...o) {\n        var n;\n        return o.length ? function(r) {\n            if (r !== t || null !== t && \"object\" == typeof t) {\n                var o = t;\n                t = r;\n                for(let r = u.length - 1; r > -1; r--)u[r](t, o);\n            }\n        }(o[0]) : ((n = $f7662eea5fe8ba4c$var$r[$f7662eea5fe8ba4c$var$r.length - 1]) && e(n), t);\n    }, e = (r, o)=>{\n        ~u.indexOf(r) || u.push(r), o && r(t);\n    };\n    return c.subscribe = e, c.unsubscribe = (r)=>{\n        (n = (o = u).indexOf(r)) > -1 && o.splice(n, 1);\n    }, c;\n}\n$f7662eea5fe8ba4c$var$t.computed = (o)=>{\n    var n = $f7662eea5fe8ba4c$var$t();\n    return function t() {\n        var u, c;\n        !function(o) {\n            if ($f7662eea5fe8ba4c$var$r.indexOf(t) > -1) throw Error(\"Circular computation\");\n        }(), $f7662eea5fe8ba4c$var$r.push(t);\n        try {\n            c = o();\n        } catch (r) {\n            u = r;\n        }\n        if ($f7662eea5fe8ba4c$var$r.pop(), u) throw u;\n        n(c);\n    }(), n;\n}, $f7662eea5fe8ba4c$var$t.from = (r)=>{\n    var o = $f7662eea5fe8ba4c$var$t();\n    return r(o), o;\n}, $f7662eea5fe8ba4c$exports = $f7662eea5fe8ba4c$var$t;\n\n\nconst $9ebf0a476e33291b$var$fileType = {\n    type: \"text/plain;charset=utf-8\"\n};\nconst $9ebf0a476e33291b$var$anchor = document.createElement(\"a\");\nfunction $9ebf0a476e33291b$export$72c04af63de9061a(file) {\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = ()=>resolve(reader.result);\n        reader.onerror = (err)=>reject(err);\n        reader.readAsText(file);\n    });\n}\nfunction $9ebf0a476e33291b$export$e620933a198f7bc(text, name) {\n    const blob = new Blob([\n        text\n    ], $9ebf0a476e33291b$var$fileType);\n    const objURL = URL.createObjectURL(blob);\n    $9ebf0a476e33291b$var$anchor.href = objURL;\n    $9ebf0a476e33291b$var$anchor.download = name;\n    $9ebf0a476e33291b$var$anchor.click();\n    // Prevents memory leaks\n    URL.revokeObjectURL(objURL);\n}\nfunction $9ebf0a476e33291b$export$8eb38b2a7b91ac21(text) {\n    const trimPoint = text.match(/(\\s)+$/g);\n    if (trimPoint) return text.substr(0, trimPoint.index);\n    else return text;\n}\nfunction $9ebf0a476e33291b$export$d614ee83a8a0f115(text) {\n    return text.split(/\\r\\n|\\r|\\n/);\n}\n\n\n\nvar $0aeb1b3782d594c9$export$252f25ea043488ae;\n(function(LockStates) {\n    LockStates[LockStates[\"WAITING\"] = 0] = \"WAITING\";\n    LockStates[LockStates[\"HAS_LOCK\"] = 1] = \"HAS_LOCK\";\n    LockStates[LockStates[\"LOCK_REJECTED\"] = 2] = \"LOCK_REJECTED\";\n    LockStates[LockStates[\"DISABLED\"] = 3] = \"DISABLED\";\n    LockStates[LockStates[\"RELEASED\"] = 4] = \"RELEASED\";\n})($0aeb1b3782d594c9$export$252f25ea043488ae || ($0aeb1b3782d594c9$export$252f25ea043488ae = {}));\nclass $0aeb1b3782d594c9$export$7f17db3bc58b5c60 {\n    constructor(name){\n        this.name = name;\n        this.state = (0, (/*@__PURE__*/$parcel$interopDefault($f7662eea5fe8ba4c$exports)))(\"locks\" in window.navigator ? 0 : 3);\n        this.releaseLock = ()=>{};\n        if (this.state() !== 3) {\n            console.log({\n                INFO: \"Acquiring lock\"\n            });\n            this.acquireLock();\n        } else console.log({\n            INFO: \"Web Locks API missing / disabled\"\n        });\n    }\n    readDocument() {\n        return window.localStorage.getItem(this.name);\n    }\n    writeDocument(text) {\n        try {\n            return window.localStorage.setItem(this.name, text);\n        } catch  {\n        // Could throw if out of storage - ignore in this case\n        }\n    }\n    acquireLock() {\n        window.navigator.locks.request(this.name, {\n            ifAvailable: true\n        }, (lock)=>{\n            if (!lock) {\n                console.log({\n                    INFO: \"Unable to acquire lock\"\n                });\n                this.state(2);\n            } else {\n                console.log({\n                    INFO: \"Acquired lock\"\n                });\n                this.state(1);\n                // Hold the lock with a promise that won't resolve until the class is torn down\n                return new Promise((resolve)=>{\n                    this.releaseLock = ()=>{\n                        this.state(4);\n                        resolve(\"Released lock\");\n                        console.log({\n                            INFO: \"Released lock\"\n                        });\n                    };\n                });\n            }\n        });\n    }\n}\n\n\nconst $a420e8f24595d678$export$d5479f9d07e31b27 = \"Dead Simple Text.txt\";\nconst $a420e8f24595d678$export$f6644f0f2c90144b = (0, (/*@__PURE__*/$parcel$interopDefault($f7662eea5fe8ba4c$exports)))({\n    key: \"__INIT\"\n});\nclass $a420e8f24595d678$export$7254cc27399e90bd {\n    constructor(view, storage){\n        this.view = view;\n        this.storage = storage;\n        $a420e8f24595d678$export$f6644f0f2c90144b.subscribe((event)=>this.handleUserEvents(event), true);\n        storage.state.subscribe((event)=>this.handleStorageEvents(event), true);\n    }\n    async handleUserEvents(event) {\n        console.log(\"handle user event:\", event);\n        switch(event.key){\n            case \"NEW_FILE\":\n                this.storage.releaseLock();\n                this.view.setFilenameText(\"untitled.txt\");\n                this.view.setContent(\"\");\n                break;\n            case \"OPEN_FILE\":\n                this.storage.releaseLock();\n                this.view.setFilenameText(event.file.name);\n                this.view.setContent(await (0, $9ebf0a476e33291b$export$72c04af63de9061a)(event.file));\n                this.view.focusContent();\n                break;\n            case \"SAVE_FILE\":\n                {\n                    const filename = this.view.getFilename();\n                    if (filename.length) {\n                        const text = this.view.getContent();\n                        const trimmed = (0, $9ebf0a476e33291b$export$8eb38b2a7b91ac21)(text);\n                        (0, $9ebf0a476e33291b$export$e620933a198f7bc)(trimmed, filename);\n                    } else window.alert(\"Please provide a filename\");\n                    break;\n                }\n            case \"INSERT_TAB\":\n                this.insertTab();\n                break;\n            case \"UNINSERT_TAB\":\n                this.uninsertTab();\n                break;\n            case \"TEXT_CHANGE\":\n                if (this.storage.state() === (0, $0aeb1b3782d594c9$export$252f25ea043488ae).HAS_LOCK) this.storage.writeDocument(this.view.getContent());\n                break;\n            case \"CHANGE_FILE_NAME\":\n                // There are some rules for how we handle locks here:\n                // - If the file is renamed from 'Dead Simple Text.txt', we release the lock and work on a fork\n                // - If a file is renamed *to* 'Dead Simple Text.txt', we 'cancel' the rename\n                if (this.storage.state() === (0, $0aeb1b3782d594c9$export$252f25ea043488ae).HAS_LOCK) {\n                    if (event.name !== $a420e8f24595d678$export$d5479f9d07e31b27) this.storage.releaseLock();\n                } else if (event.name === $a420e8f24595d678$export$d5479f9d07e31b27) this.view.setFilenameText(\"untitled.txt\");\n                break;\n        }\n    }\n    handleStorageEvents(event) {\n        console.log(\"handle storage event:\", event);\n        switch(event){\n            case (0, $0aeb1b3782d594c9$export$252f25ea043488ae).DISABLED:\n            // Browser does not support web locks API:\n            case (0, $0aeb1b3782d594c9$export$252f25ea043488ae).LOCK_REJECTED:\n                // Another tab has the lock:\n                window.setTimeout(()=>{\n                    // Timeout handles case where browser 'duplicate tab' is still manipulating the DOM\n                    this.view.setFilenameText(\"untitled.txt\");\n                }, 10);\n                break;\n            case (0, $0aeb1b3782d594c9$export$252f25ea043488ae).HAS_LOCK:\n                // We have the lock\n                this.view.setFilenameText($a420e8f24595d678$export$d5479f9d07e31b27);\n                this.view.setContent(this.storage.readDocument() || $a420e8f24595d678$var$getInitJournal());\n                break;\n        }\n        if (event !== (0, $0aeb1b3782d594c9$export$252f25ea043488ae).WAITING) this.view.setUIReady();\n    }\n    insertTab() {\n        const [cursorStart, cursorEnd] = this.view.getCursor();\n        const text = this.view.getContent();\n        const tab = \"    \";\n        if (cursorStart == cursorEnd) document.execCommand(\"insertText\", undefined, tab);\n        else {\n            const lines = (0, $9ebf0a476e33291b$export$d614ee83a8a0f115)(text);\n            let newText = \"\";\n            let lastLineEnd = 0;\n            let tabsInserted = 0;\n            let startOnLineBreak = false;\n            for(let i = 0; i < lines.length; i++){\n                const start = lastLineEnd;\n                const end = lastLineEnd + lines[i].length + 1;\n                if (i > 0) newText += \"\\n\";\n                if (end > cursorStart && start < cursorEnd) {\n                    newText += tab;\n                    tabsInserted++;\n                }\n                if (start == cursorStart) startOnLineBreak = true;\n                newText += lines[i];\n                lastLineEnd = end;\n            }\n            document.execCommand(\"selectAll\");\n            document.execCommand(\"insertText\", undefined, newText);\n            const nextCursorStart = startOnLineBreak ? cursorStart : cursorStart + tab.length;\n            const nextCursorEnd = cursorEnd + tabsInserted * tab.length;\n            this.view.setCursor(nextCursorStart, nextCursorEnd);\n        }\n    }\n    uninsertTab() {\n        const [cursorStart, cursorEnd] = this.view.getCursor();\n        const text = this.view.getContent();\n        const initialSpaces = /^    /g;\n        if (cursorStart != cursorEnd) {\n            const lines = (0, $9ebf0a476e33291b$export$d614ee83a8a0f115)(text);\n            let newText = \"\";\n            let lastLineEnd = 0;\n            let spacesRemoved = 0;\n            let startOnLineBreak = false;\n            for(let i = 0; i < lines.length; i++){\n                const line = lines[i];\n                const start = lastLineEnd;\n                const end = lastLineEnd + line.length + 1;\n                let lineTransformed = line;\n                if (i > 0) newText += \"\\n\";\n                if (end > cursorStart && start < cursorEnd) lineTransformed = line.replace(initialSpaces, \"\");\n                if (start == cursorStart) startOnLineBreak = true;\n                newText += lineTransformed;\n                spacesRemoved += line.length - lineTransformed.length;\n                lastLineEnd = end;\n            }\n            document.execCommand(\"selectAll\");\n            document.execCommand(\"insertText\", undefined, newText);\n            const nextCursorStart = startOnLineBreak ? cursorStart : cursorStart - 4;\n            const nextCursorEnd = cursorEnd - spacesRemoved;\n            this.view.setCursor(nextCursorStart, nextCursorEnd);\n        }\n    }\n}\nfunction $a420e8f24595d678$var$getInitJournal() {\n    return [\n        \"Welcome to Dead Simple Text!\",\n        \"\",\n        'This default document is your \"journal\", which is kept in sync with your browser storage. Any changes you make',\n        `to \"Dead Simple Text.txt\" will be kept for your next visit.`,\n        \"\",\n        `If you change the document name (top right) you will begin working on a separate document; this won't be synced, but`,\n        `you can download it using the Save button.`,\n        \"\",\n        \"https://github.com/jbreckmckye/dead-simple-text\"\n    ].join(\"\\n\");\n}\n\n\n\nclass $e79b70a3675d8701$export$27a5bd065ad55220 {\n    constructor(){\n        this.focusContent = ()=>{\n            this.textarea.focus();\n        };\n        this.getContent = ()=>this.textarea.value;\n        this.getCursor = ()=>[\n                this.textarea.selectionStart,\n                this.textarea.selectionEnd\n            ];\n        this.getFilename = ()=>this.filename.value;\n        this.getCursorPosition = ()=>this.textarea.selectionStart;\n        this.setContent = (text)=>{\n            // Mutations here will break the textarea undo/redo stack.\n            // Only use this when initialising a document. Otherwise, use document.execCommand.\n            this.textarea.value = text;\n        };\n        this.setCursor = (start, end)=>{\n            this.textarea.setSelectionRange(start, end);\n        };\n        this.setFilenameText = (text)=>{\n            this.filename.value = text;\n        };\n        this.setUIReady = ()=>{\n            this.toolbar.classList.remove(\"toolbar--loading\");\n        };\n        this.textChangedFlag = false;\n        this.toolbar = this.getEl(\"toolbar\");\n        this.filename = this.getEl(\"filename\");\n        this.fileNew = this.getEl(\"fileNew\");\n        this.fileOpen = this.getEl(\"fileOpen\");\n        this.fileSave = this.getEl(\"fileSave\");\n        this.textarea = this.getEl(\"textarea\");\n        this.fileOpenHelper = document.createElement(\"input\");\n        this.fileOpenHelper.type = \"file\";\n        this.fileOpenHelper.accept = \".css,.markdown,.md,.js,.json,.jsx,.scss,.svg,.ts,.tsx,.txt,.xml\";\n        this.shiftOn = false;\n        this.addEvents();\n    }\n    getEl(id) {\n        const result = document.getElementById(id);\n        if (!result) throw new Error(`No element found for selector ${id}`);\n        else return result;\n    }\n    addEvents() {\n        this.fileOpen.addEventListener(\"click\", ()=>{\n            this.fileOpenHelper.click();\n        }, false);\n        this.fileOpenHelper.addEventListener(\"change\", ()=>{\n            if (this.fileOpenHelper.files) (0, $a420e8f24595d678$export$f6644f0f2c90144b)({\n                key: \"OPEN_FILE\",\n                file: this.fileOpenHelper.files[0]\n            });\n        }, false);\n        this.fileSave.addEventListener(\"click\", ()=>{\n            (0, $a420e8f24595d678$export$f6644f0f2c90144b)({\n                key: \"SAVE_FILE\"\n            });\n        });\n        this.fileNew.addEventListener(\"click\", ()=>{\n            (0, $a420e8f24595d678$export$f6644f0f2c90144b)({\n                key: \"NEW_FILE\"\n            });\n        });\n        this.filename.addEventListener(\"change\", (e)=>{\n            const input = e.target;\n            (0, $a420e8f24595d678$export$f6644f0f2c90144b)({\n                key: \"CHANGE_FILE_NAME\",\n                name: input.value\n            });\n        });\n        this.textarea.addEventListener(\"input\", ()=>{\n            if (!this.textChangedFlag) this.textChangedFlag = true;\n        });\n        this.textarea.addEventListener(\"keydown\", (e)=>{\n            // Trap tab\n            if (e.key == \"Tab\") {\n                e.preventDefault();\n                if (!this.shiftOn) (0, $a420e8f24595d678$export$f6644f0f2c90144b)({\n                    key: \"INSERT_TAB\"\n                });\n                else (0, $a420e8f24595d678$export$f6644f0f2c90144b)({\n                    key: \"UNINSERT_TAB\"\n                });\n            // Untrap tab\n            } else if (e.key == \"F6\") {\n                e.preventDefault();\n                this.fileNew.focus();\n            // Switch shift\n            } else if (e.key == \"Shift\") // No prevent default\n            this.shiftOn = true;\n        });\n        this.textarea.addEventListener(\"keyup\", (e)=>{\n            // Switch shift\n            if (e.key == \"Shift\") this.shiftOn = false;\n        });\n        this.textarea.addEventListener(\"change\", ()=>{\n            (0, $a420e8f24595d678$export$f6644f0f2c90144b)({\n                key: \"TEXT_CHANGE\"\n            });\n        });\n    }\n}\n\n\n\nconst $cbb8114b66dd9fa5$var$view = new (0, $e79b70a3675d8701$export$27a5bd065ad55220)();\nconst $cbb8114b66dd9fa5$var$storage = new (0, $0aeb1b3782d594c9$export$7f17db3bc58b5c60)((0, $a420e8f24595d678$export$d5479f9d07e31b27));\nnew (0, $a420e8f24595d678$export$7254cc27399e90bd)($cbb8114b66dd9fa5$var$view, $cbb8114b66dd9fa5$var$storage);\n\n\n//# sourceMappingURL=index.6e1a0ad3.js.map\n","import {DEAD_SIMPLE_TXT, State} from './state';\nimport { View } from './View';\nimport {StorageLock} from \"./storage\";\n\nconst view = new View();\nconst storage = new StorageLock(DEAD_SIMPLE_TXT);\n\nnew State(view, storage);\n","import trkl from 'trkl';\n\nimport {View} from \"./View\";\nimport {readFile, saveFile, toLines, trimEnd} from \"./util\";\nimport {LockStates, StorageLock} from \"./storage\";\n\nexport type UserEvents =\n    | { key: '__INIT' }\n    | { key: 'NEW_FILE' }\n    | { key: 'OPEN_FILE', file: File }\n    | { key: 'SAVE_FILE' }\n    | { key: 'CHANGE_FILE_NAME', name: string }\n    | { key: 'INSERT_TAB' }\n    | { key: 'UNINSERT_TAB' }\n    | { key: 'TEXT_CHANGE' }\n\nexport const DEAD_SIMPLE_TXT = 'Dead Simple Text.txt';\n\nexport const eventBus = trkl<UserEvents>({ key: '__INIT' });\n\nexport class State {\n    constructor(private view: View, private storage: StorageLock) {\n        eventBus.subscribe((event) => this.handleUserEvents(event), true);\n        storage.state.subscribe((event) => this.handleStorageEvents(event), true);\n    }\n\n    private async handleUserEvents(event: UserEvents) {\n        console.log('handle user event:', event)\n        switch (event.key) {\n            case 'NEW_FILE':\n                this.storage.releaseLock();\n                this.view.setFilenameText('untitled.txt');\n                this.view.setContent('');\n                break;\n\n            case 'OPEN_FILE':\n                this.storage.releaseLock();\n                this.view.setFilenameText(event.file.name);\n                this.view.setContent(await readFile(event.file));\n                this.view.focusContent();\n                break;\n\n            case 'SAVE_FILE': {\n                const filename = this.view.getFilename();\n                if (filename.length) {\n                    const text = this.view.getContent();\n                    const trimmed = trimEnd(text);\n                    saveFile(trimmed, filename);\n                } else {\n                    window.alert('Please provide a filename');\n                }\n                break;\n            }\n\n            case 'INSERT_TAB': {\n                this.insertTab();\n                break;\n            }\n\n            case 'UNINSERT_TAB':\n                this.uninsertTab();\n                break;\n\n            case 'TEXT_CHANGE':\n                if (this.storage.state() === LockStates.HAS_LOCK) {\n                    this.storage.writeDocument(this.view.getContent());\n                }\n                break;\n\n            case 'CHANGE_FILE_NAME': {\n                // There are some rules for how we handle locks here:\n                // - If the file is renamed from 'Dead Simple Text.txt', we release the lock and work on a fork\n                // - If a file is renamed *to* 'Dead Simple Text.txt', we 'cancel' the rename\n                if (this.storage.state() === LockStates.HAS_LOCK) {\n                    if (event.name !== DEAD_SIMPLE_TXT) this.storage.releaseLock();\n                } else {\n                    if (event.name === DEAD_SIMPLE_TXT) this.view.setFilenameText('untitled.txt');\n                }\n                break;\n            }\n        }\n    }\n\n    private handleStorageEvents(event: LockStates) {\n        console.log('handle storage event:', event);\n        switch (event) {\n            case LockStates.DISABLED:\n                // Browser does not support web locks API:\n            case LockStates.LOCK_REJECTED:\n                // Another tab has the lock:\n                window.setTimeout(() => {\n                    // Timeout handles case where browser 'duplicate tab' is still manipulating the DOM\n                    this.view.setFilenameText('untitled.txt');\n                }, 10)\n                break;\n\n            case LockStates.HAS_LOCK:\n                // We have the lock\n                this.view.setFilenameText(DEAD_SIMPLE_TXT);\n                this.view.setContent(this.storage.readDocument() || getInitJournal());\n                break;\n        }\n\n        if (event !== LockStates.WAITING) {\n            this.view.setUIReady();\n        }\n    }\n\n    private insertTab(): void {\n        const [cursorStart, cursorEnd] = this.view.getCursor();\n        const text = this.view.getContent();\n        const tab = '    ';\n\n        if (cursorStart == cursorEnd) {\n            document.execCommand('insertText', undefined, tab);\n\n        } else {\n            const lines = toLines(text);\n\n            let newText = '';\n            let lastLineEnd = 0;\n            let tabsInserted = 0;\n            let startOnLineBreak = false;\n\n            for (let i = 0; i < lines.length; i++) {\n                const start = lastLineEnd;\n                const end = lastLineEnd + lines[i].length + 1;\n\n                if (i > 0) {\n                    newText += '\\n';\n                }\n\n                if (end > cursorStart && start < cursorEnd) {\n                    newText += tab;\n                    tabsInserted++;\n                }\n\n                if (start == cursorStart) {\n                    startOnLineBreak = true;\n                }\n\n                newText += lines[i];\n                lastLineEnd = end;\n            }\n\n            document.execCommand('selectAll');\n            document.execCommand('insertText', undefined, newText);\n\n            const nextCursorStart = startOnLineBreak\n                ? cursorStart\n                : cursorStart + tab.length;\n            const nextCursorEnd = cursorEnd + (tabsInserted * tab.length);\n            this.view.setCursor(nextCursorStart, nextCursorEnd);\n        }\n    }\n\n    private uninsertTab() {\n        const [cursorStart, cursorEnd] = this.view.getCursor();\n        const text = this.view.getContent();\n        const initialSpaces = /^    /g;\n\n        if (cursorStart != cursorEnd) {\n            const lines = toLines(text);\n\n            let newText = '';\n            let lastLineEnd = 0;\n            let spacesRemoved = 0;\n            let startOnLineBreak = false;\n\n            for (let i = 0; i < lines.length; i++) {\n                const line = lines[i];\n                const start = lastLineEnd;\n                const end = lastLineEnd + line.length + 1;\n\n                let lineTransformed = line;\n\n                if (i > 0) {\n                    newText += '\\n';\n                }\n\n                if (end > cursorStart && start < cursorEnd) {\n                    lineTransformed = line.replace(initialSpaces, '');\n                }\n\n                if (start == cursorStart) {\n                    startOnLineBreak = true;\n                }\n\n                newText += lineTransformed;\n                spacesRemoved += (line.length - lineTransformed.length);\n                lastLineEnd = end;\n            }\n\n            document.execCommand('selectAll');\n            document.execCommand('insertText', undefined, newText);\n\n            const nextCursorStart = startOnLineBreak\n                ? cursorStart\n                : cursorStart - 4;\n            const nextCursorEnd = cursorEnd - spacesRemoved;\n            this.view.setCursor(nextCursorStart, nextCursorEnd);\n        }\n    }\n}\n\nfunction getInitJournal() {\n    return [\n        'Welcome to Dead Simple Text!',\n        '',\n        'This default document is your \"journal\", which is kept in sync with your browser storage. Any changes you make',\n        `to \"Dead Simple Text.txt\" will be kept for your next visit.`,\n        '',\n        `If you change the document name (top right) you will begin working on a separate document; this won't be synced, but`,\n        `you can download it using the Save button.`,\n        '',\n        'https://github.com/jbreckmckye/dead-simple-text'\n    ].join('\\n')\n}","var r=[];function t(t){var o,n,u=[],c=function(...o){return o.length?function(r){if(r!==t||null!==t&&\"object\"==typeof t){var o=t;t=r;for(let r=u.length-1;r>-1;r--)u[r](t,o)}}(o[0]):((n=r[r.length-1])&&e(n),t);var n},e=(r,o)=>{~u.indexOf(r)||u.push(r),o&&r(t)};return c.subscribe=e,c.unsubscribe=(r=>{(n=(o=u).indexOf(r))>-1&&o.splice(n,1)}),c}t.computed=(o=>{var n=t();return function t(){var u,c;!function(o){if(r.indexOf(t)>-1)throw Error(\"Circular computation\")}(),r.push(t);try{c=o()}catch(r){u=r}if(r.pop(),u)throw u;n(c)}(),n}),t.from=(r=>{var o=t();return r(o),o}),\"object\"==typeof module?module.exports=t:window.trkl=t;","type LineTransformation = (lineText: string, index: number, inSelection: boolean) => string;\n\nconst fileType = {\n    type: 'text/plain;charset=utf-8'\n};\n\nconst anchor = document.createElement('a');\n\nexport function readFile(file: File): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result as string);\n        reader.onerror = err => reject(err);\n        reader.readAsText(file);\n    });\n}\n\nexport function saveFile(text: string, name: string) {\n    const blob = new Blob([text], fileType);\n    const objURL = URL.createObjectURL(blob);\n\n    anchor.href = objURL;\n    anchor.download = name;\n    anchor.click();\n\n    // Prevents memory leaks\n    URL.revokeObjectURL(objURL);\n}\n\nexport function trimEnd(text: string) {\n    const trimPoint = text.match(/(\\s)+$/g);\n    if (trimPoint) {\n        return text.substr(0, trimPoint.index);\n    } else {\n        return text;\n    }\n}\n\nexport function toLines(text: string) {\n    return text.split(/\\r\\n|\\r|\\n/);\n}","import trkl from 'trkl';\n\nexport enum LockStates {\n    WAITING,\n    HAS_LOCK,\n    LOCK_REJECTED,\n    DISABLED,\n    RELEASED\n}\n\nexport class StorageLock {\n    public state = trkl<LockStates>(\n        'locks' in window.navigator ? LockStates.WAITING : LockStates.DISABLED\n    )\n\n    constructor(private name: string) {\n        if (this.state() !== LockStates.DISABLED) {\n            console.log({ INFO: 'Acquiring lock' })\n            this.acquireLock();\n        } else {\n            console.log({ INFO: 'Web Locks API missing / disabled' })\n        }\n    }\n\n    public readDocument() {\n        return window.localStorage.getItem(this.name);\n    }\n\n    public writeDocument(text: string) {\n        try {\n            return window.localStorage.setItem(this.name, text);\n        } catch {\n            // Could throw if out of storage - ignore in this case\n        }\n    }\n\n    // Will be replaced in acquireLock\n    public releaseLock = () => {};\n\n    private acquireLock() {\n        window.navigator.locks.request(this.name, { ifAvailable: true }, (lock) => {\n            if (!lock) {\n                console.log({ INFO: 'Unable to acquire lock' })\n                this.state(LockStates.LOCK_REJECTED);\n            } else {\n                console.log({ INFO: 'Acquired lock' })\n                this.state(LockStates.HAS_LOCK);\n                // Hold the lock with a promise that won't resolve until the class is torn down\n                return new Promise((resolve) => {\n                    this.releaseLock = () => {\n                        this.state(LockStates.RELEASED);\n                        resolve('Released lock');\n                        console.log({ INFO: 'Released lock' })\n                    }\n                })\n            }\n        })\n    }\n}\n","import { eventBus } from \"./state\";\n\nexport class View {\n    private toolbar: HTMLElement;\n    private filename: HTMLInputElement;\n    private fileNew: HTMLElement;\n    private fileOpen: HTMLElement;\n    private fileOpenHelper: HTMLInputElement;\n    private fileSave: HTMLElement;\n    private textarea: HTMLTextAreaElement;\n    private shiftOn: boolean;\n\n    constructor() {\n        this.toolbar =      this.getEl('toolbar');\n        this.filename =     this.getEl('filename') as HTMLInputElement;\n        this.fileNew =      this.getEl('fileNew');\n        this.fileOpen =     this.getEl('fileOpen');\n        this.fileSave =     this.getEl('fileSave');\n        this.textarea =     this.getEl('textarea') as HTMLTextAreaElement;\n\n        this.fileOpenHelper = document.createElement('input');\n        this.fileOpenHelper.type = 'file';\n        this.fileOpenHelper.accept = '.css,.markdown,.md,.js,.json,.jsx,.scss,.svg,.ts,.tsx,.txt,.xml';\n\n        this.shiftOn = false;\n\n        this.addEvents();\n    }\n\n    public focusContent = ()=> {\n        this.textarea.focus();\n    };\n\n    public getContent = ()=> this.textarea.value;\n    public getCursor = ()=> [this.textarea.selectionStart, this.textarea.selectionEnd];\n    public getFilename = ()=> this.filename.value;\n    public getCursorPosition = ()=> this.textarea.selectionStart;\n\n    public setContent = (text: string) => {\n        // Mutations here will break the textarea undo/redo stack.\n        // Only use this when initialising a document. Otherwise, use document.execCommand.\n        this.textarea.value = text;\n    };\n\n    public setCursor = (start: number, end: number) => {\n        this.textarea.setSelectionRange(start, end);\n    };\n\n    public setFilenameText = (text: string) => {\n        this.filename.value = text;\n    };\n\n    public setUIReady = ()=> {\n        this.toolbar.classList.remove('toolbar--loading');\n    };\n\n    public textChangedFlag = false;\n\n    private getEl(id: string) {\n        const result = document.getElementById(id);\n        if (!result) {\n            throw new Error(`No element found for selector ${id}`);\n        } else {\n            return result;\n        }\n    }\n\n    private addEvents() {\n        this.fileOpen.addEventListener('click', ()=> {\n            this.fileOpenHelper.click();\n        }, false);\n\n        this.fileOpenHelper.addEventListener('change', ()=> {\n            if (this.fileOpenHelper.files) {\n                eventBus({\n                    key: 'OPEN_FILE',\n                    file: this.fileOpenHelper.files[0],\n                });\n            }\n        }, false);\n\n        this.fileSave.addEventListener('click', ()=> {\n            eventBus({ key: 'SAVE_FILE' });\n        });\n\n        this.fileNew.addEventListener('click', ()=> {\n            eventBus({ key: 'NEW_FILE' });\n        });\n\n        this.filename.addEventListener('change', (e) => {\n            const input = e.target as HTMLInputElement;\n            eventBus({ key: 'CHANGE_FILE_NAME', name: input.value })\n        })\n\n        this.textarea.addEventListener('input', ()=> {\n            if (!this.textChangedFlag) {\n                this.textChangedFlag = true;\n            }\n        });\n\n        this.textarea.addEventListener('keydown', (e: KeyboardEvent) => {\n            // Trap tab\n            if (e.key == 'Tab') {\n                e.preventDefault();\n                if (!this.shiftOn) {\n                    eventBus({ key: 'INSERT_TAB' });\n                } else {\n                    eventBus({ key: 'UNINSERT_TAB' });\n                }                \n\n            // Untrap tab\n            } else if (e.key == 'F6') {\n                e.preventDefault();\n                this.fileNew.focus();\n\n            // Switch shift\n            } else if (e.key == 'Shift') {\n                // No prevent default\n                this.shiftOn = true;\n            }\n        });\n\n        this.textarea.addEventListener('keyup', (e: KeyboardEvent) => {\n            // Switch shift\n            if (e.key == 'Shift') {\n                this.shiftOn = false;\n            }\n        });\n\n        this.textarea.addEventListener('change', () => {\n            eventBus({ key: 'TEXT_CHANGE' });\n        })\n    }\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","LockStates","$0aeb1b3782d594c9$export$252f25ea043488ae","$f7662eea5fe8ba4c$exports","$f7662eea5fe8ba4c$var$r","$f7662eea5fe8ba4c$var$t","t","o","n","u","c","length","r","e","indexOf","push","subscribe","unsubscribe","splice","computed","Error","pop","from","$9ebf0a476e33291b$var$fileType","type","$9ebf0a476e33291b$var$anchor","document","createElement","$9ebf0a476e33291b$export$d614ee83a8a0f115","text","split","$a420e8f24595d678$export$d5479f9d07e31b27","$a420e8f24595d678$export$f6644f0f2c90144b","key","$cbb8114b66dd9fa5$var$view","constructor","focusContent","textarea","focus","getContent","value","getCursor","selectionStart","selectionEnd","getFilename","filename","getCursorPosition","setContent","setCursor","start","end","setSelectionRange","setFilenameText","setUIReady","toolbar","classList","remove","textChangedFlag","getEl","fileNew","fileOpen","fileSave","fileOpenHelper","accept","shiftOn","addEvents","id","result","getElementById","addEventListener","click","files","file","name","input","target","preventDefault","$cbb8114b66dd9fa5$var$storage","state","window","navigator","releaseLock","console","log","INFO","acquireLock","readDocument","localStorage","getItem","writeDocument","setItem","locks","request","ifAvailable","lock","Promise","resolve","view","storage","event","handleUserEvents","handleStorageEvents","reject","reader","FileReader","onload","onerror","err","readAsText","blob","Blob","objURL","URL","createObjectURL","href","download","revokeObjectURL","trimPoint","match","substr","index","alert","insertTab","uninsertTab","HAS_LOCK","DISABLED","LOCK_REJECTED","setTimeout","WAITING","cursorStart","cursorEnd","tab","execCommand","undefined","lines","newText","lastLineEnd","tabsInserted","startOnLineBreak","i","nextCursorStart","nextCursorEnd","initialSpaces","spacesRemoved","line","lineTransformed","replace"],"version":3,"file":"index.6e1a0ad3.js.map"}